@charset "UTF-8";
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: 'Open Sans';
  src: url("fonts/subset-OpenSans.eot");
  src: url("fonts/subset-OpenSans.eot?#iefix") format("embedded-opentype"), url("fonts/subset-OpenSans.woff") format("woff"), url("fonts/subset-OpenSans.ttf") format("truetype"), url("fonts/subset-OpenSans.svg#OpenSans") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Open Sans';
  src: url("fonts/subset-OpenSans-Light.eot");
  src: url("fonts/subset-OpenSans-Light.eot?#iefix") format("embedded-opentype"), url("fonts/subset-OpenSans-Light.woff") format("woff"), url("fonts/subset-OpenSans-Light.ttf") format("truetype"), url("fonts/subset-OpenSans-Light.svg#OpenSans-Light") format("svg");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: 'Georgia';
  src: url("fonts/subset-Georgia-Italic.eot");
  src: url("fonts/subset-Georgia-Italic.eot?#iefix") format("embedded-opentype"), url("fonts/subset-Georgia-Italic.woff") format("woff"), url("fonts/subset-Georgia-Italic.ttf") format("truetype"), url("fonts/subset-Georgia-Italic.svg#Georgia-Italic") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Georgia';
  src: url("fonts/subset-Georgia-BoldItalic.eot");
  src: url("fonts/subset-Georgia-BoldItalic.eot?#iefix") format("embedded-opentype"), url("fonts/subset-Georgia-BoldItalic.woff") format("woff"), url("fonts/subset-Georgia-BoldItalic.ttf") format("truetype"), url("fonts/subset-Georgia-BoldItalic.svg#Georgia-BoldItalic") format("svg");
  font-weight: bold;
  font-style: italic; }

@font-face {
  font-family: 'Open Sans';
  src: url("fonts/subset-OpenSans-Italic.eot");
  src: url("fonts/subset-OpenSans-Italic.eot?#iefix") format("embedded-opentype"), url("fonts/subset-OpenSans-Italic.woff") format("woff"), url("fonts/subset-OpenSans-Italic.ttf") format("truetype"), url("fonts/subset-OpenSans-Italic.svg#OpenSans-Italic") format("svg");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Open Sans';
  src: url("fonts/subset-OpenSans-Bold.eot");
  src: url("fonts/subset-OpenSans-Bold.eot?#iefix") format("embedded-opentype"), url("fonts/subset-OpenSans-Bold.woff") format("woff"), url("fonts/subset-OpenSans-Bold.ttf") format("truetype"), url("fonts/subset-OpenSans-Bold.svg#OpenSans-Bold") format("svg");
  font-weight: bold;
  font-style: normal; }

.cf:before,
.cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.cf:after {
  clear: both; }

.cf {
  *zoom: 1; }

html {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
  font-weight: 300; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
     -moz-box-sizing: inherit;
          box-sizing: inherit; }

.wrapper {
  max-width: 60rem;
  margin: 0 auto; }

.viewport {
  -js-display: flex;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
      flex-flow: column;
  overflow-x: hidden; }
  .viewport .site-content {
    -webkit-box-flex: 1;
       -moz-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; }

.button {
  display: inline-block;
  position: relative;
  background: -webkit-gradient(linear, left top, left bottom, from(#fe7fa2), to(#e96388));
  background: -webkit-linear-gradient(top, #fe7fa2 0%, #e96388 100%);
  background: linear-gradient(to bottom, #fe7fa2 0%, #e96388 100%);
  background-color: #de628c;
  text-decoration: none;
  color: #f5f5f5;
  font: bold italic 1.2rem/1rem 'Georgia', serif;
  border-radius: 2rem;
  padding: 1rem 2rem 1.2rem;
  -webkit-box-shadow: 0 4px 0 0 #d94979;
          box-shadow: 0 4px 0 0 #d94979;
  -webkit-transform: translate3d(0, 0px, 0);
          transform: translate3d(0, 0px, 0);
  -webkit-transition: 0.3s ease-out;
  transition: 0.3s ease-out;
  -webkit-transition-property: color, -webkit-box-shadow, -webkit-transform;
  transition-property: color, -webkit-box-shadow, -webkit-transform;
  transition-property: box-shadow, color, transform;
  transition-property: box-shadow, color, transform, -webkit-box-shadow, -webkit-transform;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
          transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955); }
  .button:before {
    content: '';
    display: block;
    z-index: 1;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: url("../images/button_shine.png") center center no-repeat;
    opacity: 0.001;
    -webkit-transition: opacity 0.3s ease-out;
    transition: opacity 0.3s ease-out;
    -webkit-transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
            transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955); }
  .button:hover {
    color: #fff;
    -webkit-transform: translate3d(0, -2px, 0);
            transform: translate3d(0, -2px, 0);
    -webkit-box-shadow: 0 6px 0 0 #d94979;
            box-shadow: 0 6px 0 0 #d94979;
    -webkit-transition-duration: 0.2s;
            transition-duration: 0.2s;
    -webkit-transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
            transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); }
    .button:hover:before {
      opacity: 1;
      -webkit-transition-duration: 0.2s;
              transition-duration: 0.2s;
      -webkit-transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
              transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); }
  .button:active {
    background: -webkit-gradient(linear, left bottom, left top, from(#fe7fa2), to(#e96388));
    background: -webkit-linear-gradient(bottom, #fe7fa2 0%, #e96388 100%);
    background: linear-gradient(to top, #fe7fa2 0%, #e96388 100%);
    background-color: #de628c;
    color: #fff;
    -webkit-transform: translate3d(0, 2px, 0);
            transform: translate3d(0, 2px, 0);
    -webkit-box-shadow: 0 2px 0 0 #d94979;
            box-shadow: 0 2px 0 0 #d94979;
    -webkit-transition-duration: 0.1s;
            transition-duration: 0.1s;
    -webkit-transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
            transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); }
    .button:active:before {
      opacity: 0.001;
      -webkit-transition-duration: 0.1s;
              transition-duration: 0.1s;
      -webkit-transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
              transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); }

.format {
  background: url("../images/format_bg.png") center center no-repeat; }
  .format__header {
    font: italic 3rem 'Georgia', serif;
    padding: 0 2rem;
    text-align: center; }
  .format__container {
    -js-display: flex;
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row nowrap;
        flex-flow: row nowrap;
    -webkit-box-align: stretch;
       -moz-box-align: stretch;
        -ms-flex-align: stretch;
            align-items: stretch; }
  .format__item {
    position: relative;
    -webkit-box-flex: 1;
       -moz-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    padding-bottom: 3.4rem; }
  .format__image img {
    max-width: 100%; }
  .format__title, .format__button {
    text-align: center; }
  .format__title {
    font: bold italic 1.4rem 'Georgia', serif;
    margin: 0.5rem 0 1.2rem; }
  .format__button {
    position: absolute;
    bottom: 0.2rem;
    width: 100%;
    left: 0; }

.girls {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  /*overflow: hidden;*/
  /* 70px / 1920px */
  /*padding-bottom: 3.64583vw;*/ }
  .girls__before img, .girls__after img {
    display: block; }
  .girls__before {
    padding-bottom: 2.083vw; }
    .girls__before img {
      min-width: 100vw;
      height: 41.8229167vw;
      /* 40px / 1920px */
      /*margin-bottom: 2.083vw;*/ }
  .girls__after {
    position: absolute;
    top: 0;
    /*bottom: 3.64583vw;*/
    bottom: 0;
    left: 50vw;
    margin: auto 0;
    right: -25vw;
    -webkit-transform: skewX(17deg);
        -ms-transform: skewX(17deg);
            transform: skewX(17deg);
    overflow: hidden;
    -webkit-transition: left 0.5s ease-out;
    transition: left 0.5s ease-out;
    -webkit-box-shadow: 0 0 3.64583vw rgba(0, 0, 0, 0.25);
            box-shadow: 0 0 3.64583vw rgba(0, 0, 0, 0.25); }
    .girls__after img {
      min-width: 100vw;
      position: absolute;
      height: 100%;
      right: 25vw;
      -webkit-transform: skewX(-17deg);
          -ms-transform: skewX(-17deg);
              transform: skewX(-17deg); }
  .girls--handle {
    -webkit-perspective: 500px;
            perspective: 500px;
    position: relative;
    top: 80px;
    z-index: 1;
    margin: 0 auto;
    max-width: 50rem;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    cursor: pointer;
    cursor: move; }
    .girls--handle > div {
      -webkit-transition: padding 0.3s ease-out;
      transition: padding 0.3s ease-out;
      -webkit-transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
              transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955); }
      .girls--handle > div:hover, .girls--handle > div.panning {
        padding: 0 0.5rem;
        -webkit-transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
                transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94); }
  .girls__handle-image {
    position: absolute;
    display: block;
    left: 0;
    right: 0;
    top: 10px;
    bottom: -200px;
    margin: auto;
    pointer-events: none; }
  .girls__h-bg_left, .girls__h-bg_right {
    width: 50%;
    float: left;
    color: #f5f5f5;
    font: italic 1.3rem 'Georgia', serif; }
  .girls__h-bg_left {
    background: url("../images/welcome-arrow-left.png") left center no-repeat;
    text-align: right;
    padding: 60px 175px 60px 40px; }
  .girls__h-bg_right {
    background: url("../images/welcome-arrow-right.png") right center no-repeat;
    padding: 60px 40px 60px 175px; }

.header {
  position: absolute;
  width: 100%;
  z-index: 100;
  top: 0; }

.nav ul {
  list-style: none;
  padding: 0;
  margin: 0; }

.nav li {
  display: block; }

.nav > ul {
  -js-display: flex;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row nowrap;
      flex-flow: row nowrap;
  padding: 1.2rem 0;
  -webkit-box-align: center;
     -moz-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  .nav > ul > li {
    position: relative;
    -webkit-box-flex: 1;
       -moz-box-flex: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; }
    .nav > ul > li > a {
      text-decoration: none;
      color: #fff;
      display: block;
      padding: 1.1rem 0;
      position: relative;
      border-radius: 10px;
      text-align: center; }
      .nav > ul > li > a:after {
        content: '';
        width: 0;
        height: 20%;
        top: 0;
        bottom: 0;
        right: -1px;
        position: absolute;
        margin: auto 0;
        border-right: 1px solid rgba(180, 180, 180, 0.2); }
      .nav > ul > li > a:before {
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        margin: auto;
        content: '';
        border: 2px solid rgba(255, 255, 255, 0.2);
        -webkit-backface-visibility: hidden;
                backface-visibility: hidden;
        opacity: 0.001;
        -webkit-transition: opacity 0.2s ease-out;
        transition: opacity 0.2s ease-out;
        -webkit-transition-property: opacity, background-color, -webkit-transform;
        transition-property: opacity, background-color, -webkit-transform;
        transition-property: opacity, background-color, transform;
        transition-property: opacity, background-color, transform, -webkit-transform;
        -webkit-transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
                transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
        border-radius: 10px;
        background-color: rgba(255, 255, 255, 0.1);
        -webkit-transform: translateZ(0) scale(0.8, 0.8);
                transform: translateZ(0) scale(0.8, 0.8); }
    .nav > ul > li:first-child {
      -webkit-box-flex: 0;
         -moz-box-flex: 0;
          -ms-flex-positive: 0;
              flex-grow: 0; }
      .nav > ul > li:first-child > a {
        overflow: hidden;
        text-indent: 9999px;
        padding: 0;
        margin: 0 1.1rem 0 0;
        border-radius: 0;
        background-image: url(../images/sprite.png);
        background-position: 0px 0px;
        width: 23px;
        height: 21px; }
        @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
          .nav > ul > li:first-child > a {
            background-image: url(../images/sprite@2x.png);
            background-size: 23px 21px; } }
        .nav > ul > li:first-child > a:before {
          content: none;
          display: none; }
    .nav > ul > li:first-child:after, .nav > ul > li:last-child a:after {
      content: none;
      display: none; }
    .nav > ul > li > ul {
      visibility: hidden;
      position: absolute;
      top: 100%;
      left: 0;
      width: 13.75rem;
      -webkit-transition: 0.2s linear;
      transition: 0.2s linear;
      -webkit-transition-property: all, visibility;
      transition-property: all, visibility;
      -webkit-transition-delay: 0s, 0.2s;
              transition-delay: 0s, 0.2s;
      -webkit-transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955), cubic-bezier(0.455, 0.03, 0.515, 0.955), linear;
              transition-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955), cubic-bezier(0.455, 0.03, 0.515, 0.955), linear;
      -webkit-backface-visibility: hidden;
              backface-visibility: hidden;
      -webkit-transform: translate3d(0, 5px, 0);
              transform: translate3d(0, 5px, 0);
      opacity: 0.001;
      padding: 1rem;
      background: #e6e6e6;
      border-radius: 10px; }
      .nav > ul > li > ul li {
        padding-left: 1rem; }
      .nav > ul > li > ul a {
        display: inline-block;
        text-decoration: none;
        color: #1e1e1d;
        font-weight: normal;
        font-size: 0.9rem;
        vertical-align: middle;
        line-height: 0.9rem;
        position: relative;
        padding-bottom: 1px;
        border-bottom: 2px dotted rgba(255, 255, 255, 0); }
        .nav > ul > li > ul a:before {
          position: absolute;
          left: -1rem;
          line-height: 1rem;
          top: 0;
          color: #de628c;
          content: '•';
          font-size: 1.4rem;
          vertical-align: middle; }
        .nav > ul > li > ul a:hover {
          border-bottom-color: rgba(222, 98, 140, 0.3); }
    .nav > ul > li:hover > ul {
      opacity: 1;
      visibility: visible;
      -webkit-transform: translate3d(0, 0rem, 0);
              transform: translate3d(0, 0rem, 0);
      -webkit-transition-delay: 0s, 0s;
              transition-delay: 0s, 0s;
      -webkit-transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94), cubic-bezier(0.25, 0.46, 0.45, 0.94), linear;
              transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94), cubic-bezier(0.25, 0.46, 0.45, 0.94), linear; }
    .nav > ul > li:hover > a:before {
      opacity: 1;
      -webkit-transform: translateZ(0) scale(1, 1);
              transform: translateZ(0) scale(1, 1);
      -webkit-transition-duration: 0.3s;
              transition-duration: 0.3s;
      -webkit-transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
              transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
      background-color: rgba(255, 255, 255, 0); }
    .nav > ul > li:hover > a:after {
      opacity: 0.001; }
    .nav > ul > li.menu-item-has-children > a:before {
      bottom: -10px;
      border-radius: 10px 10px 0 0;
      border-width: 2px 2px 0;
      -webkit-transform: translate3d(0, -5px, 0);
              transform: translate3d(0, -5px, 0);
      background-color: rgba(255, 255, 255, 0); }
    .nav > ul > li.menu-item-has-children:hover > a:before {
      -webkit-transform: translate3d(0, 0rem, 0);
              transform: translate3d(0, 0rem, 0); }

.helper {
  background: url("../images/helper_bg.jpg") top center no-repeat;
  background-size: cover;
  padding: 5rem 0 0; }
  .helper__header {
    font: italic 3rem 'Georgia', serif;
    padding: 0 2rem;
    text-align: center; }
    .helper__header sup {
      font-size: 1rem;
      top: -1.5em;
      font-family: 'Open Sans', sans-serif;
      font-weight: normal; }
  .helper__container {
    -js-display: flex;
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row wrap;
        flex-flow: row wrap;
    width: 85%;
    margin: 2rem 0 2rem; }
  .helper__item {
    width: 50%;
    -js-display: flex;
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row nowrap;
        flex-flow: row nowrap;
    -webkit-box-align: start;
       -moz-box-align: start;
        -ms-flex-align: start;
            align-items: flex-start;
    margin: 2rem 0; }
    .helper__item:nth-child(2n) {
      padding-left: 0.5rem; }
    .helper__item:nth-child(2n+1) {
      padding-right: 0.5rem; }
  .helper__text {
    -webkit-box-flex: 1;
       -moz-box-flex: 1;
        -ms-flex: 1;
            flex: 1;
    margin-left: 1rem;
    font-weight: 400; }
  .helper__image {
    text-align: center;
    width: 71px; }
    .helper__image img {
      margin-top: -1rem; }
  .helper__title {
    font-weight: bold;
    text-transform: uppercase;
    margin-bottom: 1.2rem; }
  .helper__item-image {
    margin-top: -2.5rem; }

.problems {
  background: url("../images/problems_bg.jpg") no-repeat;
  background-size: cover;
  padding-top: 6rem; }
  .problems .wrapper {
    position: relative;
    background: url("../images/problems_cell2.png") 10% 70% no-repeat; }
  .problems__header {
    font: italic 3.125rem 'Georgia', serif; }
  .problems__cell {
    position: absolute;
    left: 0;
    right: 0;
    margin: 0 auto;
    max-width: 100%; }
  .problems__item {
    width: 36%;
    margin: 0 66% 0 0;
    font-weight: 400; }
    .problems__item:nth-child(2n+1) {
      margin: 0 0 0 66%;
      text-align: right; }
    .problems__item:nth-child(2) {
      margin-top: -3rem; }
    .problems__item:nth-child(3) {
      margin-top: -5rem; }
    .problems__item .pulse {
      display: inline-block; }
  .problems__title {
    color: #41393a;
    font: bold italic 1.5rem 'Georgia', serif;
    margin: 1rem 0 1.8rem; }
  .problems__container {
    -js-display: flex;
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: column;
        flex-flow: column; }
  .problems__clock {
    position: relative;
    display: inline-block;
    padding: 37px;
    background: url("../images/clock.png") center center no-repeat; }
  .problems__time {
    position: absolute;
    top: 50%;
    left: 50%;
    -webkit-transform: translate3d(-50%, -50%, 0);
            transform: translate3d(-50%, -50%, 0);
    height: 4rem;
    font: italic 7rem/4rem 'Georgia', serif; }
  .problems__above, .problems__besides {
    position: absolute; }
  .problems__above {
    font: italic 1.5rem 'Georgia', serif;
    bottom: 100%;
    left: 0;
    width: 400px;
    text-align: left; }
  .problems__besides {
    width: 300px;
    left: 100%;
    bottom: 0;
    margin-left: 1rem;
    text-align: left;
    font-size: 4rem;
    line-height: 2rem;
    vertical-align: bottom; }
  .problems__fast {
    text-align: center; }

.pulse {
  position: relative;
  width: 50px;
  height: 50px; }
  .pulse__ripple {
    -webkit-box-sizing: border-box;
       -moz-box-sizing: border-box;
            box-sizing: border-box;
    border-radius: 50%;
    border: 4px solid;
    position: absolute;
    left: 21px;
    right: 21px;
    top: 21px;
    bottom: 21px;
    margin: auto; }
    .pulse__ripple:nth-child(1) {
      left: 21px;
      right: 21px;
      top: 21px;
      bottom: 21px;
      opacity: 1;
      border-color: #eb516d;
      -webkit-box-shadow: 0 0 20px 1 #fff;
              box-shadow: 0 0 20px 1 #fff; }
    .pulse__ripple:nth-child(2) {
      -webkit-animation-delay: -0.66s !important;
              animation-delay: -0.66s !important;
      left: 11px;
      right: 11px;
      top: 11px;
      bottom: 11px;
      opacity: 1;
      border-color: #f4667f;
      -webkit-box-shadow: 0 0 20px 1 #fff;
              box-shadow: 0 0 20px 1 #fff; }
    .pulse__ripple:nth-child(3) {
      -webkit-animation-delay: -1.33s !important;
              animation-delay: -1.33s !important;
      left: 0px;
      right: 0px;
      top: 0px;
      bottom: 0px;
      opacity: 1;
      border-color: #fd7991;
      -webkit-box-shadow: 0 0 20px 0 #fd7991;
              box-shadow: 0 0 20px 0 #fd7991; }

.problems__item:hover .pulse__ripple, .pulse:hover .pulse__ripple {
  -webkit-animation: headache linear 2s infinite forwards;
          animation: headache linear 2s infinite forwards; }

@-webkit-keyframes headache {
  0% {
    left: 21px;
    right: 21px;
    top: 21px;
    bottom: 21px;
    opacity: 1;
    border-color: #eb516d;
    -webkit-box-shadow: 0 0 20px 1 #fff;
            box-shadow: 0 0 20px 1 #fff; }
  33.33% {
    left: 13px;
    right: 13px;
    top: 13px;
    bottom: 13px;
    opacity: 1;
    border-color: #f4667f; }
  66.66% {
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;
    opacity: 1;
    border-color: #fd7991; }
  100% {
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;
    opacity: 0.001;
    border-color: #fd7991;
    -webkit-box-shadow: 0 0 20px 0 #fd7991;
            box-shadow: 0 0 20px 0 #fd7991; } }

@keyframes headache {
  0% {
    left: 21px;
    right: 21px;
    top: 21px;
    bottom: 21px;
    opacity: 1;
    border-color: #eb516d;
    -webkit-box-shadow: 0 0 20px 1 #fff;
            box-shadow: 0 0 20px 1 #fff; }
  33.33% {
    left: 13px;
    right: 13px;
    top: 13px;
    bottom: 13px;
    opacity: 1;
    border-color: #f4667f; }
  66.66% {
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;
    opacity: 1;
    border-color: #fd7991; }
  100% {
    left: 0px;
    right: 0px;
    top: 0px;
    bottom: 0px;
    opacity: 0.001;
    border-color: #fd7991;
    -webkit-box-shadow: 0 0 20px 0 #fd7991;
            box-shadow: 0 0 20px 0 #fd7991; } }

/*! Pushy - v1.0.0 - 2016-3-1
* Pushy is a responsive off-canvas navigation menu using CSS transforms & transitions.
* https://github.com/christophery/pushy/
* by Christopher Yee */
/* Menu Appearance */
.pushy {
  position: fixed;
  width: 280px;
  height: 100%;
  top: 0;
  z-index: 9999;
  background: #191918;
  overflow: auto;
  visibility: hidden;
  -webkit-overflow-scrolling: touch;
  /* enables momentum scrolling in iOS overflow elements */ }
  .pushy a {
    display: block;
    color: #b3b3b1;
    padding: 15px 30px;
    text-decoration: none;
    outline: 0; }
  .pushy a:hover {
    color: #FFF; }
  .pushy ul {
    list-style: none;
    padding: 0 0 0 5px; }
  .pushy ul:first-child {
    margin-top: 10px; }
  .pushy.pushy-left {
    left: 0; }
  .pushy.pushy-right {
    right: 0; }

/* Menu Movement */
.pushy-left {
  -webkit-transform: translate3d(-280px, 0, 0);
  -ms-transform: translate3d(-280px, 0, 0);
  transform: translate3d(-280px, 0, 0); }

.pushy-open-left #container,
.pushy-open-left .push {
  -webkit-transform: translate3d(280px, 0, 0);
  -ms-transform: translate3d(280px, 0, 0);
  transform: translate3d(280px, 0, 0); }

.pushy-right {
  -webkit-transform: translate3d(280px, 0, 0);
  -ms-transform: translate3d(280px, 0, 0);
  transform: translate3d(280px, 0, 0); }

.pushy-open-right #container,
.pushy-open-right .push {
  -webkit-transform: translate3d(-280px, 0, 0);
  -ms-transform: translate3d(-280px, 0, 0);
  transform: translate3d(-280px, 0, 0); }

.pushy-open-left .pushy,
.pushy-open-right .pushy {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

/* Menu Transitions */
#container,
.pushy,
.push {
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99);
  transition: -webkit-transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99);
  transition: transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99);
  transition: transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99), -webkit-transform 0.2s cubic-bezier(0.16, 0.68, 0.43, 0.99); }

/* Site Overlay */
.site-overlay {
  display: none; }

.pushy-open-left .site-overlay,
.pushy-open-right .site-overlay {
  display: block;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 9998;
  background-color: rgba(0, 0, 0, 0.5);
  -webkit-animation: fade 500ms;
  animation: fade 500ms; }

@keyframes fade {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@-webkit-keyframes fade {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

/* Submenu Appearance */
.pushy-submenu {
  /* Submenu Icon */ }
  .pushy-submenu ul {
    padding-left: 15px;
    -webkit-transition: max-height 0.2s ease-in-out;
    transition: max-height 0.2s ease-in-out; }
    .pushy-submenu ul .pushy-link {
      -webkit-transition: opacity 0.2s ease-in-out;
      transition: opacity 0.2s ease-in-out; }
  .pushy-submenu > a {
    position: relative; }
  .pushy-submenu > a::after {
    content: '';
    display: block;
    height: 11px;
    width: 8px;
    position: absolute;
    top: 50%;
    right: 15px;
    background: url("../images/arrow.svg") no-repeat;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
    -webkit-transition: -webkit-transform 0.2s;
    transition: -webkit-transform 0.2s;
    transition: transform 0.2s;
    transition: transform 0.2s, -webkit-transform 0.2s; }

/* Submenu Movement */
.pushy-submenu-closed ul {
  max-height: 0;
  overflow: hidden; }

.pushy-submenu-closed .pushy-link {
  opacity: 0; }

.pushy-submenu-open {
  /* Submenu Icon */ }
  .pushy-submenu-open ul {
    max-height: 1000px; }
  .pushy-submenu-open .pushy-link {
    opacity: 1; }
  .pushy-submenu-open a::after {
    -webkit-transform: translateY(-50%) rotate(90deg);
    -ms-transform: translateY(-50%) rotate(90deg);
    transform: translateY(-50%) rotate(90deg); }

.no-csstransforms3d .pushy-submenu-closed ul {
  max-height: none;
  display: none; }

.welcome {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  position: relative;
  height: 41.8229167vw;
  padding-top: 6rem; }
  .welcome__logo {
    text-align: center; }
  .welcome__tagline {
    font: bold italic 1.8rem 'Georgia', serif;
    color: #f5f5f5;
    text-align: center; }
  .welcome__logo, .welcome__tagline {
    position: relative;
    z-index: 1; }

/*# sourceMappingURL=data:application/json;base64, */
